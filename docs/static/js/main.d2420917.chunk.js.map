{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loading.js","components/AddButton.js","components/SearchBar.js","components/Book.js","components/BookSection.js","components/SearchResult.js","BooksAPI.js","containers/MyReads.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Footer","target","href","rel","fa","color","Loading","props","react_spinners","size","sizeUnit","AddButton","Link","to","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","query","value","state","searchBook","cleanResult","eraseSearch","bind","assertThisInitialized","_this2","lib","minLength","debounceTimeout","onChange","placeholder","onClick","Component","Book","selectValue","handleSelection","book","shelf","bookThumbnail","imageLinks","thumbnail","key","id","src","alt","title","subtitle","moveBook","disabled","BookSection","style","name","books","map","type","components_Book","SearchResult","renderBooks","loading","components_Loading","error","searchedBooks","renderSearchInstruction","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","update","method","objectSpread","Content-Type","body","JSON","stringify","search","readStyle","backgroundColor","toReadStyle","readingStyle","MyReads","inTheShelf","bookFound","forEach","bookInShelf","searchLoading","BookAPI","console","log","errorSearching","bookToCheck","bookInTheShelf","undefined","moveTo","length","eraseSearchedBooks","_this3","components_Header","components_Footer","Route","exact","path","render","components_AddButton","components_BookSection","components_SearchBar","components_SearchResult","booksShelf","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","process","containers_MyReads","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d2420917.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"row header\">\r\n      <span>My Reads</span>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport { FaHeart, FaReact } from \"react-icons/fa\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"row footer\">\r\n      <span>\r\n        Developed by{\" \"}\r\n        <a\r\n          target=\"_blank\"\r\n          href=\"https://github.com/tavioalves\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          OA\r\n        </a>{\" \"}\r\n        with <FaHeart color={\"#ff283e\"} /> and <FaReact color={'#33E0FF'} />\r\n      </span>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { PropagateLoader } from \"react-spinners\";\r\n\r\nconst Loading = (props) => {\r\n  return (\r\n    <div className=\"flex-center height-100\">\r\n      <PropagateLoader size={props.size} sizeUnit={\"px\"} color={props.color} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport { FaPlus } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddButton = (props) => {\r\n  return (\r\n    <div className=\"button-section\">\r\n      <Link to='/search' className=\"button-add add\">\r\n        <FaPlus size={20} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddButton;\r\n","import React, { Component } from 'react';\r\nimport { FaChevronLeft, FaTimes } from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\nimport { DebounceInput } from 'react-debounce-input';\r\n\r\nclass SearchBar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: ''\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({ query: event.target.value });\r\n\r\n    if (this.state.query !== '')\r\n      this.props.searchBook(this.state.query)\r\n\r\n    if (this.state.query === '')\r\n      this.props.cleanResult()\r\n  }\r\n\r\n  eraseSearch = () => {\r\n    this.setState({ query: '' });\r\n    \r\n    this.props.cleanResult();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"flex-center\">\r\n        <Link to='/' className=\"button-back\">\r\n          <FaChevronLeft size={20} />\r\n        </Link>\r\n        <div className=\"width-100\">\r\n          <DebounceInput\r\n            minLength={3}\r\n            debounceTimeout={500}\r\n            value={this.state.query}\r\n            onChange={this.handleChange}\r\n            className=\"search-bar fadeIn animated\"\r\n            placeholder=\"Search books to add to your bookshelf...\"\r\n          />\r\n          <span className=\"erase-search\" onClick={() => this.eraseSearch()}>\r\n            <FaTimes />\r\n          </span>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\nimport { FaChevronDown } from 'react-icons/fa';\r\n\r\nclass Book extends Component {\r\n  state = {\r\n    selectValue: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ selectValue: this.props.book.shelf })\r\n  }\r\n\r\n  handleSelection = (event) => {\r\n    this.setState({ selectValue: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { book } = this.props;  \r\n    const bookThumbnail = (!book.imageLinks) ? 'https://via.placeholder.com/130x175' : book.imageLinks.thumbnail;\r\n\r\n    return (\r\n      <div className=\"book animated fadeIn\" key={book.id}>\r\n        <img className=\"book-img\" src={bookThumbnail} alt={book.title} />\r\n        <p className=\"book-title\">{book.title}</p>\r\n        <p className=\"book-subtitle\">{book.subtitle}</p>\r\n        <div className=\"book-selection\">\r\n          <FaChevronDown size={12.5} />\r\n          <select\r\n            value={this.state.selectValue}\r\n            onChange={this.handleSelection}\r\n            onClick={() => {\r\n              this.props.moveBook(book, this.state.selectValue)\r\n              this.setState({ selectValue: '' });\r\n            }}\r\n          >\r\n            <option value=\"\" disabled>Move to...</option>\r\n            <option value=\"currentlyReading\">Currently reading</option>\r\n            <option value=\"wantToRead\">Want to read</option>\r\n            <option value=\"read\">Read</option>\r\n            <option value=\"none\">None</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Book;","import React from 'react';\r\nimport Book from './Book';\r\n\r\nconst BookSection = (props) => {\r\n  return (\r\n    <div className={`animated fadeIn col-lg-4`} style={props.style}>\r\n      <p className=\"book-section-header\">{props.name}</p>\r\n      <div className=\"flex-row\">\r\n        {props.books.map(book => (\r\n          props.type === book.shelf ?\r\n            (<Book\r\n              key={book.id}\r\n              book={book}\r\n              moveBook={props.moveBook}\r\n            />\r\n            ) : null\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BookSection;","import React, { Component } from 'react';\r\nimport Book from './Book';\r\nimport Loading from './Loading';\r\nimport { FaFrown } from 'react-icons/fa';\r\n\r\nclass SearchResult extends Component {\r\n  componentWillUnmount() {\r\n    this.props.cleanResult();\r\n  }\r\n\r\n  renderBooks = (props) => {\r\n    if(props.loading) {\r\n      return <Loading size={15} color={'#8181EC'} />\r\n    } else if (props.error) {\r\n      return (\r\n        <div className=\"error-section fadeIn animated\">\r\n          <p>Nothing has been found. Try again.</p>\r\n          <FaFrown size={50} />\r\n        </div>\r\n      )\r\n    } else {\r\n      return props.searchedBooks.map(book => (\r\n        <Book\r\n          book={book}\r\n          key={book.id}\r\n          moveBook={props.moveBook}\r\n        />\r\n      ))\r\n    }\r\n  }\r\n\r\n  renderSearchInstruction = () => {\r\n    return (\r\n      <p className=\"search-instruction\">Type the category of desired book to add.</p>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (         \r\n      <div className=\"flex-row result-section\">\r\n        {this.renderBooks(this.props)}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SearchResult;\r\n\r\n\r\n","\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React, { Component } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport Footer from \"../components/Footer\";\r\nimport Loading from \"../components/Loading\";\r\nimport AddButton from \"../components/AddButton\";\r\nimport SearchBar from \"../components/SearchBar\";\r\nimport BookSection from \"../components/BookSection\";\r\nimport SearchResult from \"../components/SearchResult\";\r\n\r\nimport { Route } from \"react-router-dom\";\r\nimport * as BookAPI from \"../BooksAPI\";\r\n\r\nconst readStyle = {\r\n  backgroundColor: '#8181EC'\r\n}\r\nconst toReadStyle = {\r\n  backgroundColor: '#81ECEC'\r\n}\r\nconst readingStyle = {\r\n  backgroundColor: '#81B7EC'\r\n}\r\n\r\nclass MyReads extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      books: [],\r\n      searchedBooks: [],\r\n      loading: true,\r\n      searchLoading: false,\r\n      errorSearching: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    BookAPI.getAll().then(books => {\r\n      this.setState({ books: books, loading: false });\r\n    });\r\n  }\r\n\r\n  inTheShelf = (book, shelf) => {\r\n    let bookFound;\r\n\r\n    shelf.forEach(bookInShelf => {\r\n      if (bookInShelf.id === book.id)\r\n        bookFound = bookInShelf\r\n    })\r\n\r\n    return bookFound;\r\n  }\r\n\r\n  searchBook = query => {\r\n    this.setState({ searchLoading: true })\r\n\r\n    BookAPI.search(query).then(searchedBooks => {\r\n      console.log(searchedBooks.error);\r\n      if(searchedBooks.error === 'empty query') {        \r\n        this.setState({ \r\n          searchedBooks: [], \r\n          searchLoading: false,\r\n          errorSearching: true, \r\n        })\r\n      } else {\r\n        searchedBooks = searchedBooks.map(bookToCheck => {\r\n          let bookInTheShelf = this.inTheShelf(bookToCheck, this.state.books);\r\n\r\n          if (bookInTheShelf === undefined) {\r\n            bookToCheck.shelf = 'none';\r\n            return bookToCheck;\r\n          } else\r\n            return bookInTheShelf;\r\n        })\r\n\r\n        this.setState({ \r\n          searchedBooks, \r\n          searchLoading: false,\r\n          errorSearching: false, \r\n        })\r\n      }        \r\n    }) \r\n  }\r\n\r\n  moveBook = (book, moveTo) => {\r\n    if (book.shelf !== moveTo) {\r\n      if (moveTo.length !== 0) {\r\n        this.setState({ loading: true });\r\n\r\n        BookAPI.update(book, moveTo).then(() => {\r\n          BookAPI.getAll().then(books => {\r\n            this.setState({ books, loading: false });\r\n          })\r\n        })\r\n      }\r\n    }\r\n  };\r\n\r\n  eraseSearchedBooks = () => {\r\n    this.setState({ searchedBooks: [] })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <Header />\r\n          <Loading size={15} color={'#8181EC'} />\r\n          <Footer />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"container-fluid\">\r\n          <Header />\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return (\r\n                <div className=\"row height-100\">\r\n                  <AddButton />\r\n                  <BookSection\r\n                    type=\"wantToRead\"\r\n                    name=\"Want to read\"\r\n                    style={toReadStyle}\r\n                    books={this.state.books}\r\n                    moveBook={this.moveBook}\r\n                  />\r\n                  <BookSection\r\n                    type=\"currentlyReading\"\r\n                    style={readingStyle}\r\n                    name=\"Currently reading\"\r\n                    books={this.state.books}\r\n                    moveBook={this.moveBook}\r\n                  />\r\n                  <BookSection\r\n                    type=\"read\"\r\n                    name=\"Read\"\r\n                    style={readStyle}\r\n                    books={this.state.books}\r\n                    moveBook={this.moveBook}\r\n                  />\r\n                </div>\r\n              )\r\n            }}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/search\"\r\n            render={() => {\r\n              return (\r\n                <div className=\"row height-100\">\r\n                  <div className=\"search-section\">\r\n                    <SearchBar\r\n                      searchBook={this.searchBook}\r\n                      cleanResult={this.eraseSearchedBooks}\r\n                    />\r\n                    <SearchResult\r\n                      moveBook={this.moveBook}\r\n                      booksShelf={this.state.books}\r\n                      error={this.state.errorSearching}\r\n                      loading={this.state.searchLoading}\r\n                      cleanResult={this.eraseSearchedBooks}\r\n                      searchedBooks={this.state.searchedBooks}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              )\r\n            }}\r\n          />\r\n          <Footer />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MyReads;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport MyReads from './containers/MyReads';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport \"./styles/animate.css\";\r\nimport './styles/my-reads.css';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n    <MyReads />\r\n  </BrowserRouter>, \r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}