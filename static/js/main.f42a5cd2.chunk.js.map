{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loading.js","components/AddButton.js","components/SearchBar.js","components/Book.js","components/BookSection.js","components/SearchResult.js","BooksAPI.js","containers/MyReads.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Footer","target","href","rel","fa","color","Loading","props","react_spinners","size","sizeUnit","AddButton","Link","to","SearchBar","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","setState","query","value","state","searchBook","cleanResult","eraseSearch","_this2","lib","minLength","debounceTimeout","onChange","placeholder","onClick","Component","Book","selectValue","handleSelection","book","moveBook","shelf","bookThumbnail","imageLinks","thumbnail","key","id","src","alt","title","subtitle","disabled","PureComponent","BookSection","style","name","books","map","type","components_Book","SearchResult","renderBooks","loading","components_Loading","error","searchedBooks","renderSearchInstruction","api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","fetch","concat","method","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","data","readStyle","backgroundColor","toReadStyle","readingStyle","MyReads","searchLoading","errorSearching","BookAPI","prev","filter","b","inTheShelf","bookFound","forEach","bookInShelf","bookToCheck","bookInTheShelf","undefined","eraseSearchedBooks","components_Header","components_Footer","Route","exact","path","render","components_AddButton","components_BookSection","components_SearchBar","components_SearchResult","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","basename","process","containers_MyReads","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f42a5cd2.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => {\n  return (\n    <header className=\"row header\">\n      <span>My Reads</span>\n    </header>\n  )\n}\n\nexport default Header;","import React from \"react\";\nimport { FaHeart, FaReact } from \"react-icons/fa\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"row footer\">\n      <span>\n        Developed by{\" \"}\n        <a\n          target=\"_blank\"\n          href=\"https://github.com/tavioalves\"\n          rel=\"noopener noreferrer\"\n        >\n          OA\n        </a>{\" \"}\n        with <FaHeart color={\"#ff283e\"} /> and <FaReact color={'#33E0FF'} />\n      </span>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { PropagateLoader } from \"react-spinners\";\n\nconst Loading = (props) => {\n  return (\n    <div className=\"flex-center height-100\">\n      <PropagateLoader size={props.size} sizeUnit={\"px\"} color={props.color} />\n    </div>\n  )\n}\n\nexport default Loading;","import React from \"react\";\nimport { FaPlus } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\n\nconst AddButton = (props) => {\n  return (\n    <div className=\"button-section\">\n      <Link to='/search' className=\"button-add add\">\n        <FaPlus size={20} />\n      </Link>\n    </div>\n  );\n};\n\nexport default AddButton;\n","import React, { Component } from 'react';\nimport { FaChevronLeft, FaTimes } from 'react-icons/fa';\nimport { Link } from 'react-router-dom';\nimport { DebounceInput } from 'react-debounce-input';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: ''\n    };\n  }\n\n  handleChange = (event) => {\n    this.setState({ query: event.target.value });\n\n    if (this.state.query !== '')\n      this.props.searchBook(this.state.query)\n\n    if (this.state.query === '')\n      this.props.cleanResult()\n  }\n\n  eraseSearch = () => {\n    this.setState({ query: '' });\n    \n    this.props.cleanResult();\n  }\n\n  render() {\n    return (\n      <div className=\"flex-center\">\n        <Link to='/' className=\"button-back\">\n          <FaChevronLeft size={20} />\n        </Link>\n        <div className=\"width-100\">\n          <DebounceInput\n            minLength={3}\n            debounceTimeout={500}\n            value={this.state.query}\n            onChange={(event) => this.handleChange(event)}\n            className=\"search-bar fadeIn animated\"\n            placeholder=\"Search for a category' book to add to your bookshelf...\"\n          />\n          <span className=\"erase-search\" onClick={() => this.eraseSearch()}>\n            <FaTimes />\n          </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar;","import React, { PureComponent } from 'react';\nimport { FaChevronDown } from 'react-icons/fa';\n\nclass Book extends PureComponent {\n  state = {\n    selectValue: 'none'\n  }\n\n  componentDidMount() {\n    this.setState({ selectValue: this.props.book.shelf })\n  }\n\n  handleSelection = (event, book) => {\n    this.setState({ selectValue: event.target.value })\n    this.props.moveBook(book, event.target.value)\n  }\n\n  render() {\n    const { book } = this.props;  \n    const bookThumbnail = (!book.imageLinks) ? 'https://via.placeholder.com/130x175' : book.imageLinks.thumbnail;\n\n    return (\n      <div className=\"book animated fadeIn\" key={book.id}>\n        <img className=\"book-img\" src={bookThumbnail} alt={book.title} />\n        <p className=\"book-title\">{book.title}</p>\n        <p className=\"book-subtitle\">{book.subtitle}</p>\n        <div className=\"book-selection\">\n          <FaChevronDown size={12.5} />\n          <select\n            value={this.state.selectValue}\n            onChange={event => this.handleSelection(event, book)}\n          >\n            <option value=\"\" disabled>Move to...</option>\n            <option value=\"currentlyReading\">Currently reading</option>\n            <option value=\"wantToRead\">Want to read</option>\n            <option value=\"read\">Read</option>\n            <option value=\"none\">None</option>\n          </select>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Book;","import React from 'react';\nimport Book from './Book';\n\nconst BookSection = (props) => {\n  return (\n    <div className={`animated fadeIn col-lg-4`} style={props.style}>\n      <p className=\"book-section-header\">{props.name}</p>\n      <div className=\"flex-row\">\n        {props.books.map(book => (\n          props.type === book.shelf ?\n            (<Book\n              key={book.id}\n              book={book}\n              moveBook={props.moveBook}\n            />\n            ) : null\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default BookSection;","import React, { Component } from 'react';\nimport Book from './Book';\nimport Loading from './Loading';\nimport { FaFrown } from 'react-icons/fa';\n\nclass SearchResult extends Component {\n  componentWillUnmount() {\n    this.props.cleanResult();\n  }\n\n  renderBooks = (props) => {\n    if(props.loading) {\n      return <Loading size={15} color={'#8181EC'} />\n    } else if (props.error) {\n      return (\n        <div className=\"error-section fadeIn animated\">\n          <p>Nothing has been found. Try again.</p>\n          <FaFrown size={50} />\n        </div>\n      )\n    } else {\n      return props.searchedBooks.map(book => (\n        <Book\n          book={book}\n          key={book.id}\n          moveBook={props.moveBook}\n        />\n      ))\n    }\n  }\n\n  renderSearchInstruction = () => {\n    return (\n      <p className=\"search-instruction\">Type the category of desired book to add.</p>\n    )\n  }\n\n  render() {\n    return (         \n      <div className=\"flex-row result-section\">\n        {this.renderBooks(this.props)}\n      </div>\n    )\n  }\n}\n\nexport default SearchResult;\n\n\n","\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from \"react\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport Loading from \"../components/Loading\";\nimport AddButton from \"../components/AddButton\";\nimport SearchBar from \"../components/SearchBar\";\nimport BookSection from \"../components/BookSection\";\nimport SearchResult from \"../components/SearchResult\";\n\nimport { Route } from \"react-router-dom\";\nimport * as BookAPI from \"../BooksAPI\";\n\nconst readStyle = {\n  backgroundColor: '#8181EC'\n}\nconst toReadStyle = {\n  backgroundColor: '#81ECEC'\n}\nconst readingStyle = {\n  backgroundColor: '#81B7EC'\n}\n\nclass MyReads extends Component {\n  state = {\n    books: [],\n    searchedBooks: [],\n    loading: true,\n    searchLoading: false,\n    errorSearching: false\n  }\n\n  async componentDidMount() {\n    const books = await BookAPI.getAll();\n    this.setState({ books, loading: false });\n  }\n\n  moveBook = (book, shelf) => {\n    BookAPI.update(book, shelf);\n    book.shelf = shelf;\n    \n    this.setState((prev) => ({\n      books: prev.books.filter(b => b.id !== book.id).concat([book])\n    }))\n  }\n\n  inTheShelf = (book, shelf) => {\n    let bookFound;\n     shelf.forEach(bookInShelf => {\n      if (bookInShelf.id === book.id)\n        bookFound = bookInShelf\n    })\n     return bookFound;\n  }\n\n  searchBook = query => {\n    this.setState({ searchLoading: true })\n\n    BookAPI.search(query).then(searchedBooks => {\n      if(searchedBooks.error === 'empty query') {        \n        this.setState({ \n          searchedBooks: [], \n          searchLoading: false,\n          errorSearching: true, \n        })\n      } else {\n        searchedBooks = searchedBooks.map(bookToCheck => {\n          let bookInTheShelf = this.inTheShelf(bookToCheck, this.state.books);\n           if (bookInTheShelf === undefined) {\n            bookToCheck.shelf = 'none';\n            return bookToCheck;\n          } else\n            return bookInTheShelf;\n        })\n\n        this.setState({ \n          searchedBooks, \n          searchLoading: false,\n          errorSearching: false, \n        })\n      }        \n    }) \n  }\n\n  eraseSearchedBooks = () => {\n    this.setState({ searchedBooks: [] })\n  }\n\n  render() {  \n    if (this.state.loading) {\n      return (\n        <div className=\"container-fluid\">\n          <Header />\n          <Loading size={15} color={'#8181EC'} />\n          <Footer />\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"container-fluid\">\n          <Header />\n          <Route\n            exact\n            path=\"/\"\n            render={() => {\n              return (\n                <div className=\"row height-100\">\n                  <AddButton />\n                  <BookSection\n                    type=\"wantToRead\"\n                    name=\"Want to read\"\n                    style={toReadStyle}\n                    books={this.state.books}\n                    moveBook={this.moveBook}\n                  />\n                  <BookSection\n                    type=\"currentlyReading\"\n                    style={readingStyle}\n                    name=\"Currently reading\"\n                    books={this.state.books}\n                    moveBook={this.moveBook}\n                  />\n                  <BookSection\n                    type=\"read\"\n                    name=\"Read\"\n                    style={readStyle}\n                    books={this.state.books}\n                    moveBook={this.moveBook}\n                  />\n                </div>\n              )\n            }}\n          />\n          <Route\n            exact\n            path=\"/search\"\n            render={() => {\n              return (\n                <div className=\"row height-100\">\n                  <div className=\"search-section\">\n                    <SearchBar\n                      searchBook={this.searchBook}\n                      cleanResult={this.eraseSearchedBooks}\n                    />\n                    <SearchResult\n                      moveBook={this.moveBook}\n                      error={this.state.errorSearching}\n                      loading={this.state.searchLoading}\n                      cleanResult={this.eraseSearchedBooks}\n                      searchedBooks={this.state.searchedBooks}\n                    />\n                  </div>\n                </div>\n              )\n            }}\n          />\n          <Footer />\n        </div>\n      );\n    }\n  }\n}\n\nexport default MyReads;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MyReads from './containers/MyReads';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport \"./styles/animate.css\";\nimport './styles/my-reads.css';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <MyReads />\n  </BrowserRouter>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}